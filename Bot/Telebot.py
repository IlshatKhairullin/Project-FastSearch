import time
import telebot
import Configure
from telebot import types
from Parsers.United_parsers import combine_parsers

bot = telebot.TeleBot(Configure.config['token'])

@bot.message_handler(commands=['help', 'start'])
def start(message):
    global keyboard1

    keyboard1 = types.ReplyKeyboardMarkup(resize_keyboard=True)
    address = types.KeyboardButton(text='–ê–¥—Ä–µ—Å –¥–æ—Å—Ç–∞–≤–∫–∏')
    search_product_price = types.KeyboardButton(text='üîé –ü–æ–∏—Å–∫ —Ç–æ–≤–∞—Ä–∞')
    delivery = types.KeyboardButton(text='‚ÇΩ –°—Ç–æ–∏–º–æ—Å—Ç—å –¥–æ—Å—Ç–∞–≤–∫–∏')
    bot_help = types.KeyboardButton(text='‚ùì –ü–æ–º–æ—â—å')
    keyboard1.add(address, search_product_price, delivery, bot_help)

    bot.send_message(message.chat.id, '–ü—Ä–∏–≤–µ—Ç, —è —Ç–µ–ª–µ–≥—Ä–∞–º–º –±–æ—Ç', reply_markup=keyboard1)

@bot.message_handler(content_types=['text'])
def callback_worker(message):
    global flag
    if message.chat.type == 'private':
        if message.text == 'üîé –ü–æ–∏—Å–∫ —Ç–æ–≤–∞—Ä–∞':
            keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
            back = types.KeyboardButton('‚¨Ö –ù–∞–∑–∞–¥')
            keyboard.add(back)
            bot.send_message(message.chat.id, 'üîé –ü–æ–∏—Å–∫ —Ç–æ–≤–∞—Ä–∞')

            product_name = bot.send_message(message.chat.id, '–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–æ–¥—É–∫—Ç–∞', reply_markup=keyboard)  # —á—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–¥–æ 2 —Ä–∞–∑–∞ –Ω–∞–∂–∞—Ç—å –Ω–∞–∑–∞–¥ - –ø–æ—Ñ–∏–∫—Å–∏—Ç—å
            bot.register_next_step_handler(product_name, product_info_func)
            flag = 1
            waitMethod()

            bot.send_message(message.chat.id, prod_info)

        elif message.text == '–ê–¥—Ä–µ—Å –¥–æ—Å—Ç–∞–≤–∫–∏':
            keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
            back = types.KeyboardButton('‚¨Ö –ù–∞–∑–∞–¥')
            keyboard.add(back)

            user_address = bot.reply_to(message, '–í–≤–µ–¥–∏—Ç–µ –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ –∞–¥—Ä–µ—Å –¥–æ—Å—Ç–∞–≤–∫–∏')
            bot.register_next_step_handler(user_address, handle_address)

            # bot.send_message(message.chat.id, '–¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ –ø–µ—Ä–µ–π—Ç–∏ –∫ –≤–≤–æ–¥—É —Ç–æ–≤–∞—Ä–∞')

        elif message.text == '‚ÇΩ –°—Ç–æ–∏–º–æ—Å—Ç—å –¥–æ—Å—Ç–∞–≤–∫–∏':
            keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
            back = types.KeyboardButton('‚¨Ö –ù–∞–∑–∞–¥')
            keyboard.add(back)

            bot.send_message(message.chat.id, '‚ÇΩ –°—Ç–æ–∏–º–æ—Å—Ç—å –¥–æ—Å—Ç–∞–≤–∫–∏', reply_markup=keyboard)

        elif message.text == '‚ùì –ü–æ–º–æ—â—å':  # –ø—Ä–æ–ø–∏—Å–∞—Ç—å –≤ –ø–æ–º–æ—â—å, —á—Ç–æ —Å–Ω–∞—á–∞–ª–∞ –Ω—É–∂–Ω–æ –≤–≤–µ—Å—Ç–∏ –∞–¥—Ä–µ—Å –¥–æ—Å—Ç–∞–≤–∫–∏
            keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
            back = types.KeyboardButton('‚¨Ö –ù–∞–∑–∞–¥')
            keyboard.add(back)

            bot.send_message(message.chat.id, '‚ùì –ü–æ–º–æ—â—å', reply_markup=keyboard)

        if message.text == '‚¨Ö –ù–∞–∑–∞–¥':
            bot.send_message(message.chat.id, '‚¨Ö –ù–∞–∑–∞–¥', reply_markup=keyboard1)

def waitMethod():
    while True:
        if flag == 1:
            time.sleep(5)
        else:
            break

def handle_address(user_address):
    global address
    address = user_address.text

def product_info_func(product_name):
    global prod_info, flag
    prod_info = f'–ù–∞–π–¥–µ–Ω–æ –Ω–µ—Å–∫–æ–ª—å–∫–æ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤\n{combine_parsers(product_name.text, address)}'
    flag = 0
    return


if __name__ == '__main__':
    bot.polling(none_stop=True, interval=0)
